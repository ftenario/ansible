---
- hosts: master
  remote_user: ubuntu
  become: yes
  become_method: sudo
  become_user: root 
  gather_facts: yes
  connection: ssh

  # vars_prompt:

  #   - name: "pod network cidr"
  #     prompt: Enter the pod network CIDR, example: 192.168.100.0/24
  #     private: no

  #   - name: kubernetes master ip
  #     prompt: "Enter the Apiserver advertise address, example: 192.168.1.130"
  #     private: no

  #   - name: "pod_network manifest style"
  #     prompt: "Enter the POD network manifest file URL, your choice could be flannel, weave or calico, etc"
  #     private: no

  tasks:
    - name: pull images for cluster
      shell: kubeadm config images pull

    - name: Initialize the cluster
      shell: kubeadm init --apiserver-advertise-address=192.168.1.130 --pod-network-cidr=10.244.0.0/16

    - name: create .kube directory
      become: yes
      become_user: ubuntu
      file:
        path: /home/ubuntu/.kube
        state: directory
        mode: 0755

    - name: check admin.conf exists
      stat:
        path: /etc/kubernetes/admin.conf
      register: k8s_conf

    - name: copy admin.conf to users .kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
      when: k8s_conf.stat.exists   

    - name: Install Flannel, POD network manifest file. Ex flannel, weave, calico.
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

    - pause: seconds=30

    - name: Get the token for joining the nodes with Kubernetes master
      shell: kubeadm token create --print-join-command 
      register: kubernetes_join_command

    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Copy join command to local file
      # the remote_user should be the user from the ansible controlling host. ie. MacOS
      remote_user: ftenario
      become: yes
      become_method: sudo
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
    